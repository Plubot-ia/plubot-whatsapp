version: '3.8'

services:
  # Redis for session storage, queues, and rate limiting
  redis:
    image: redis:7-alpine
    container_name: plubot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - plubot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: plubot-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - plubot-network
    depends_on:
      - whatsapp-service

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: plubot-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - plubot-network
    depends_on:
      - prometheus

  # WhatsApp microservice
  whatsapp-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: plubot-whatsapp
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "9091:9090"  # Metrics port
    # Resource limits for demo service (max 20 concurrent sessions)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    environment:
      - NODE_ENV=production
      - PORT=3001
      - METRICS_PORT=9090
      
      # Redis configuration
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_QUEUE_DB=1
      - REDIS_RATELIMIT_DB=2
      
      # Cluster configuration
      - CLUSTER_WORKERS=4
      - WORKER_MAX_MEMORY=512
      - SESSION_DISTRIBUTION_STRATEGY=least-connections
      
      # Session pool configuration
      - SESSION_POOL_MAX_SIZE=100
      - SESSION_POOL_MIN_SIZE=10
      - SESSION_IDLE_TIMEOUT=300000
      
      # Queue Manager configuration (Demo limits)
      - MAX_QR_SESSIONS=20
      - SESSION_TIMEOUT=1800000
      - QUEUE_CHECK_INTERVAL=5000
      
      # Rate limiting
      - RATE_LIMIT_WINDOW=60000
      - RATE_LIMIT_MAX_REQUESTS=100
      
      # Circuit breaker
      - CIRCUIT_BREAKER_THRESHOLD=50
      - CIRCUIT_BREAKER_TIMEOUT=30000
      
      # CORS
      - CORS_ORIGIN=http://localhost:3000,http://localhost:5173
      
      # Logging
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      
    volumes:
      - ./sessions:/app/sessions
      - ./logs:/app/logs
      - ./.wwebjs_cache:/app/.wwebjs_cache
    networks:
      - plubot-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # NGINX Load Balancer (optional, for multiple instances)
  nginx:
    image: nginx:alpine
    container_name: plubot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - plubot-network
    depends_on:
      - whatsapp-service

networks:
  plubot-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
